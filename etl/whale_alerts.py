import os
from sqlalchemy import create_engine, text
from dotenv import load_dotenv
from utils.telegram import send_telegram_message

import logging
from utils.logger import setup_logger

setup_logger()
logging.info(f"üìÑ –ó–∞–ø—É—â–µ–Ω —Å–∫—Ä–∏–ø—Ç: {__file__}")


# üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()


# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
DATABASE_URL = os.getenv("DATABASE_URL")
engine = create_engine(DATABASE_URL)

# üß† Whale Alert: –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
query = text("""
    SELECT address, token_symbol,
           MAX(balance) - MIN(balance) AS change
    FROM wallet_token_balances
    WHERE updated_at >= NOW() - INTERVAL '1 day'
    GROUP BY address, token_symbol
    HAVING ABS(MAX(balance) - MIN(balance)) > 1000000
    ORDER BY change DESC
    LIMIT 10;
""")


logging.info("üîç –ò—â–µ–º —Ä–µ–∑–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Ç–æ–∫–µ–Ω–æ–≤")

try:
    with engine.begin() as conn:
        result = conn.execute(query).mappings()
        for row in result:
            addr = row["address"]
            change = row["change"]
            symbol = row["token_symbol"]

            message = f"üêã Whale Alert:\n–ê–¥—Ä–µ—Å: {addr}\n–¢–æ–∫–µ–Ω: {symbol}\n–ò–∑–º–µ–Ω–µ–Ω–∏–µ: {change:.2f}"
            send_telegram_message(message)
            logging.info(f"üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ {symbol}")
except Exception as e:
    logging.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ whale_alerts: {e}")
